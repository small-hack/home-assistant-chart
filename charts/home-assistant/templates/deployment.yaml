apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "home-assistant.fullname" . }}
  labels:
    {{- include "home-assistant.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: {{ .Values.strategy.type }}
  selector:
    matchLabels:
      {{- include "home-assistant.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "home-assistant.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "home-assistant.serviceAccountName" . }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if and (or .Values.homeAssistant.configuration .Values.homeAssistant.existingConfigurationConfigMap) .Values.persistence.enabled }}
      initContainers:
        - name: config-creation
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          command:
            - "sh"
            - "-c"
            - |
              cp /configYaml/config/configuration.yaml /config && \
              if test -f /configYaml/themes/themes.yaml; then cp /configYaml/themes/themes.yaml /config; else touch /config/themes.yaml; fi && \
              if test -f /configYaml/automations/automations.yaml; then cp /configYaml/automations/automations.yaml /config; else touch /config/automations.yaml; fi && \
              if test -f /configYaml/scenes/scenes.yaml; then cp /configYaml/scenes/scenes.yaml /config; else touch /config/scenes.yaml; fi
          volumeMounts:
            - name: config
              mountPath: /config
            - name: configuration-yaml
              mountPath: /configYaml/config
            {{- if or .Values.homeAssistant.themes .Values.homeAssistant.existingThemesConfigMap }}
            - name: themes-yaml
              mountPath: /configYaml/themes
            {{- end }}
            {{- if or .Values.homeAssistant.automations .Values.homeAssistant.existingAutomationsConfigMap }}
            - name: automations-yaml
              mountPath: /configYaml/automations
            {{- end }}
            {{- if or .Values.homeAssistant.scenes .Values.homeAssistant.existingScenesConfigMap }}
            - name: scenes-yaml
              mountPath: /configYaml/scenes
            {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          {{- if or .Values.homeAssistant.timezone .Values.extraEnv }}
          env:
            {{- with .Values.extraEnv }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .Values.homeAssistant.timezone }}
            - name: TZ
              value: {{ .Values.homeAssistant.timezone }}
            {{- end }}{{/* end with timezone env var */}}
          {{- end }}{{/* end check for env vars for home asisstant container */}}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- toYaml (omit .Values.livenessProbe "enabled") | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- toYaml (omit .Values.readinessProbe "enabled") | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if or .Values.persistence.enabled .Values.extraVolumeMounts }}
          volumeMounts:
          {{- if .Values.persistence.enabled }}
            - name: config
              mountPath: /config
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
          {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- end }}
      {{- if or .Values.persistence.enabled .Values.extraVolumes }}
      volumes:
      {{- if .Values.persistence.enabled }}
        - name: config
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ include "home-assistant.name" . }}{{- end }}
      {{- end }}
      {{- if or .Values.homeAssistant.existingConfigurationConfigMap .Values.homeAssistant.configuration }}
        - name: configuration-yaml
          configMap:
            name: {{ if .Values.existingConfigurationConfigMap }}{{ .Values.homeAssistant.existingConfigurationConfigMap }}{{- else }}{{ include "home-assistant.name" . }}{{- end }}
      {{- end }}
      {{- if or .Values.homeAssistant.existingThemesConfigMap .Values.homeAssistant.themes }}
        - name: themes-yaml
          configMap:
            name: {{ if .Values.existingThemesConfigMap }}{{ .Values.homeAssistant.existingThemesConfigMap }}{{- else }}{{ include "home-assistant.name" . }}-themes{{- end }}
      {{- end }}
      {{- if or .Values.homeAssistant.existingAutomationsConfigMap .Values.homeAssistant.automations }}
        - name: automation-yaml
          configMap:
            name: {{ if .Values.existingAutomationsConfigMap }}{{ .Values.homeAssistant.existingAutomationsConfigMap }}{{- else }}{{ include "home-assistant.name" . }}-automations{{- end }}
      {{- end }}
      {{- if or .Values.homeAssistant.existingScenesConfigMap .Values.homeAssistant.scenes }}
        - name: scenes-yaml
          configMap:
            name: {{ if .Values.existingScenesConfigMap }}{{ .Values.homeAssistant.existingScenesConfigMap }}{{- else }}{{ include "home-assistant.name" . }}-scenes{{- end }}
      {{- end }}
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
